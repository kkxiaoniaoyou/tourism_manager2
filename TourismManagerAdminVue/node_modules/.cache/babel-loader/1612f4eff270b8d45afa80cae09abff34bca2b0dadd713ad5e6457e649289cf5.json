{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { mixin } from \"../../../minix\";\nimport { editSysHotel, getSysHotelById, getSysAttractionsList } from '../../../api/api';\nexport default {\n  mixins: [mixin],\n  data() {\n    return {\n      formLabelWidth: '80px',\n      form: {\n        name: \"\",\n        attractionsId: \"\",\n        introduce: \"\",\n        images: \"\",\n        address: \"\"\n      },\n      attractions: [],\n      fileList: [],\n      dialogImageUrl: '',\n      dialogVisible: false,\n      rules: {\n        name: [{\n          required: true,\n          message: '请输入名称',\n          trigger: 'blur'\n        }],\n        introduce: [{\n          required: true,\n          message: '请输入介绍',\n          trigger: 'blur'\n        }],\n        images: [{\n          required: true,\n          message: '请上传图片',\n          trigger: 'blur'\n        }],\n        address: [{\n          required: true,\n          message: '请输入地址',\n          trigger: 'blur'\n        }],\n        attractionsId: [{\n          required: true,\n          message: '请选择景点',\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n  props: ['updateVisible', 'updateId'],\n  methods: {\n    getSysAttractionsList() {\n      getSysAttractionsList().then(res => {\n        if (res.code == 1000) {\n          this.attractions = res.data;\n        }\n      });\n    },\n    handleAvatorSuccess(res) {\n      let _this = this;\n      if (res.code == 1000) {\n        _this.$message({\n          type: 'success',\n          message: '上传成功!'\n        });\n        this.fileList.push({\n          url: this.$store.state.configure.HOST + res.message\n        });\n      } else {\n        _this.$notify.error({\n          title: '错误',\n          message: res.message\n        });\n      }\n    },\n    handleRemove(file, fileList) {\n      this.fileList = fileList;\n    },\n    handlePictureCardPreview(file) {\n      this.dialogImageUrl = file.url;\n      this.dialogVisible = true;\n    },\n    submit() {\n      var file = [];\n      for (let i = 0; i < this.fileList.length; i++) {\n        file.push(this.fileList[i].url);\n      }\n      this.form.images = file.join(\",\");\n      this.$refs[\"ruleForm\"].validate(valid => {\n        if (valid) {\n          editSysHotel(this.form).then(res => {\n            if (res.code == 1000) {\n              this.$notify.success({\n                title: '成功',\n                message: \"保存成功\"\n              });\n              this.handleClose();\n            } else {\n              this.$notify.error({\n                title: '错误',\n                message: res.message\n              });\n            }\n          });\n        } else {\n          return false;\n        }\n      });\n    },\n    handleClose() {\n      this.fileList = [];\n      this.$emit(\"updateFalse\");\n    }\n  },\n  created() {},\n  mounted() {\n    this.getSysAttractionsList();\n  },\n  watch: {\n    updateId(newVal) {\n      if (newVal) {\n        getSysHotelById({\n          id: newVal\n        }).then(res => {\n          if (res.code == 1000) {\n            this.form = res.data;\n            var img = this.form.images.split(\",\");\n            for (let i = 0; i < img.length; i++) {\n              var param = {\n                url: img[i]\n              };\n              this.fileList.push(param);\n            }\n          } else {\n            this.$notify.error({\n              title: '错误',\n              message: res.message\n            });\n          }\n        });\n      }\n    }\n  }\n};","map":{"version":3,"names":["mixin","editSysHotel","getSysHotelById","getSysAttractionsList","mixins","data","formLabelWidth","form","name","attractionsId","introduce","images","address","attractions","fileList","dialogImageUrl","dialogVisible","rules","required","message","trigger","props","methods","then","res","code","handleAvatorSuccess","_this","$message","type","push","url","$store","state","configure","HOST","$notify","error","title","handleRemove","file","handlePictureCardPreview","submit","i","length","join","$refs","validate","valid","success","handleClose","$emit","created","mounted","watch","updateId","newVal","id","img","split","param"],"sources":["src/components/system/hotel/updateHotel.vue"],"sourcesContent":["<template>\r\n<div>\r\n  <el-dialog title=\"编辑酒店\" width=\"40%\" :destroy-on-close=\"true\" :visible.sync=\"updateVisible\" :before-close=\"handleClose\">\r\n    <el-form :model=\"form\" :rules=\"rules\" ref=\"ruleForm\">\r\n      <el-row :gutter=\"10\">\r\n        <el-col :xs=\"24\" :sm=\"24\" :md=\"24\" :lg=\"24\" :xl=\"24\">\r\n            <span class=\"search-title\">\r\n                景点:\r\n                </span>\r\n            <div style=\"width:100%\">\r\n                <el-form-item prop=\"attractionsId\" style=\"margin-bottom:0\">\r\n                  <el-select size=\"mini\" v-model=\"form.attractionsId\" placeholder=\"请选择\">\r\n                    <el-option\r\n                      v-for=\"(item,index) in attractions\"\r\n                      :key=\"index\"\r\n                      :label=\"item.name\"\r\n                      :value=\"item.id\">\r\n                    </el-option>\r\n                  </el-select>\r\n                </el-form-item>\r\n            </div>\r\n        </el-col>\r\n        <el-col :xs=\"24\" :sm=\"24\" :md=\"24\" :lg=\"24\" :xl=\"24\">\r\n            <span class=\"search-title\">\r\n                名称:\r\n                </span>\r\n            <div style=\"width:100%\">\r\n                <el-form-item prop=\"name\" style=\"margin-bottom:0\">\r\n                    <el-input v-model=\"form.name\" size=\"mini\" placeholder=\"请输入名称\" autocomplete=\"off\"></el-input>\r\n                </el-form-item>\r\n            </div>\r\n        </el-col>\r\n        <el-col :xs=\"24\" :sm=\"24\" :md=\"24\" :lg=\"24\" :xl=\"24\">\r\n            <span class=\"search-title\">\r\n                地址:\r\n                </span>\r\n            <div style=\"width:100%\">\r\n                <el-form-item prop=\"address\" style=\"margin-bottom:0\">\r\n                    <el-input v-model=\"form.address\" size=\"mini\" placeholder=\"请输入地址\" autocomplete=\"off\"></el-input>\r\n                </el-form-item>\r\n            </div>\r\n        </el-col>\r\n        <el-col :xs=\"24\" :sm=\"24\" :md=\"24\" :lg=\"24\" :xl=\"24\">\r\n            <span class=\"search-title\">\r\n                介绍:\r\n                </span>\r\n            <div style=\"width:100%\">\r\n                <el-form-item prop=\"introduce\" style=\"margin-bottom:0\">\r\n                    <el-input type=\"textarea\" v-model=\"form.introduce\" size=\"mini\" placeholder=\"请输入介绍\" autocomplete=\"off\"></el-input>\r\n                </el-form-item>\r\n            </div>\r\n        </el-col>\r\n        <el-col :xs=\"24\" :sm=\"24\" :md=\"24\" :lg=\"24\" :xl=\"24\">\r\n            <span class=\"search-title\">\r\n                图片:\r\n                </span>\r\n            <div style=\"width:100%\">\r\n                <el-form-item prop=\"images\" style=\"margin-bottom:0\">\r\n                    <el-upload\r\n                        :file-list=\"fileList\"\r\n                        ref=\"upload\"\r\n                        :action=\"uploadImageUrl()\"\r\n                        accept=\"image/*\"\r\n                        :multiple=\"false\"\r\n                        :limit=\"5\"\r\n                        :before-upload=\"beforeAvatorUpload\"\r\n                        list-type=\"picture-card\"\r\n                        :on-preview=\"handlePictureCardPreview\"\r\n                        :on-exceed=\"handleExceed\"\r\n                        :on-success=\"handleAvatorSuccess\"\r\n                        :on-remove=\"handleRemove\">\r\n                        <i class=\"el-icon-plus\"></i>\r\n                    </el-upload>\r\n                    <el-dialog title=\"预览\" :visible.sync=\"dialogVisible\">\r\n                        <img width=\"100%\" :src=\"dialogImageUrl\" alt=\"\">\r\n                    </el-dialog>\r\n                </el-form-item>\r\n            </div>\r\n        </el-col>\r\n      </el-row>\r\n    </el-form>\r\n    <div slot=\"footer\" class=\"dialog-footer\">\r\n      <el-button size=\"mini\" type=\"primary\" @click=\"submit\">确 定</el-button>\r\n      <el-button size=\"mini\" @click=\"handleClose\">取 消</el-button>\r\n    </div>\r\n  </el-dialog>\r\n</div>\r\n</template>\r\n\r\n<script>\r\n  import {mixin} from \"../../../minix\";\r\n  import {editSysHotel,getSysHotelById,getSysAttractionsList} from '../../../api/api'\r\n  export default {\r\n    mixins: [mixin],\r\n    data() {\r\n      return{\r\n        formLabelWidth: '80px',\r\n        form: {\r\n          name: \"\",\r\n          attractionsId: \"\",\r\n          introduce: \"\",\r\n          images: \"\",\r\n          address: \"\"\r\n        },\r\n        attractions: [],\r\n        fileList: [],\r\n        dialogImageUrl: '',\r\n        dialogVisible: false,\r\n        rules: {\r\n          name: [\r\n            { required: true, message: '请输入名称', trigger: 'blur' },\r\n          ],\r\n          introduce: [\r\n            { required: true, message: '请输入介绍', trigger: 'blur' },\r\n          ],\r\n          images: [\r\n            { required: true, message: '请上传图片', trigger: 'blur' },\r\n          ],\r\n          address: [\r\n            { required: true, message: '请输入地址', trigger: 'blur' },\r\n          ],\r\n          attractionsId: [\r\n            { required: true, message: '请选择景点', trigger: 'blur' },\r\n          ],\r\n        },\r\n      }\r\n    },\r\n    props: ['updateVisible','updateId'],\r\n    methods: {\r\n      getSysAttractionsList() {\r\n        getSysAttractionsList().then(res => {\r\n          if (res.code == 1000) {\r\n            this.attractions = res.data\r\n          }\r\n        })\r\n      },\r\n      handleAvatorSuccess(res) {\r\n        let _this = this;\r\n        if(res.code == 1000){\r\n            _this.$message({\r\n              type: 'success',\r\n              message: '上传成功!'\r\n            });\r\n            this.fileList.push({url:this.$store.state.configure.HOST + res.message})\r\n        }else{\r\n          _this.$notify.error({\r\n            title: '错误',\r\n            message: res.message\r\n          });\r\n        }\r\n      },\r\n      handleRemove(file, fileList) {\r\n        this.fileList = fileList\r\n      },\r\n      handlePictureCardPreview(file) {\r\n        this.dialogImageUrl = file.url;\r\n        this.dialogVisible = true;\r\n      },\r\n      submit() {\r\n        var file = []\r\n        for(let i = 0;i < this.fileList.length;i++) {\r\n            file.push(this.fileList[i].url)\r\n        }\r\n        this.form.images = file.join(\",\")\r\n        this.$refs[\"ruleForm\"].validate((valid) => {\r\n          if (valid) {\r\n            editSysHotel(this.form).then(res => {\r\n              if(res.code == 1000) {\r\n                this.$notify.success({\r\n                  title: '成功',\r\n                  message: \"保存成功\"\r\n                });\r\n                this.handleClose();\r\n              } else {\r\n                this.$notify.error({\r\n                  title: '错误',\r\n                  message: res.message\r\n                });\r\n              }\r\n            })\r\n          } else {\r\n            return false;\r\n          }\r\n        });\r\n      },\r\n      handleClose() {\r\n        this.fileList = []\r\n        this.$emit(\"updateFalse\")\r\n      },\r\n     \r\n    },\r\n    created() {\r\n     \r\n    },\r\n    mounted() {\r\n      this.getSysAttractionsList()\r\n    },\r\n    watch: {\r\n      updateId(newVal) {\r\n        if(newVal) {\r\n          getSysHotelById({id:newVal}).then(res => {\r\n            if(res.code == 1000) {\r\n              this.form = res.data\r\n              var img = this.form.images.split(\",\")\r\n              for(let i = 0;i<img.length;i++) {\r\n                  var param = {\r\n                      url: img[i]\r\n                  }\r\n                  this.fileList.push(param)\r\n              }\r\n            } else {\r\n              this.$notify.error({\r\n                title: '错误',\r\n                message: res.message\r\n              });\r\n            }\r\n          })\r\n        }\r\n        \r\n      }\r\n    }\r\n }\r\n</script>\r\n\r\n<style lang=scss scoped>\r\n  .el-col {\r\n      display: flex;\r\n      flex-direction: row;\r\n      align-items: center;\r\n      margin-top: 24px\r\n  }\r\n  .search-title {\r\n      font-family: '黑体';\r\n      float: right;\r\n      white-space: nowrap;\r\n      font-size: 14px;\r\n      width: 84px;\r\n      text-align: right;\r\n  }\r\n  .el-tree {\r\n      border: 1px solid #BDC1C9;\r\n  }\r\n</style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}