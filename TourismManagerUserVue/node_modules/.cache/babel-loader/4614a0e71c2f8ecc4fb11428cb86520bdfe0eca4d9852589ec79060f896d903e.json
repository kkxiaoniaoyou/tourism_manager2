{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { getEmailReg, forgetPassword } from '../../api/api';\nexport default {\n  data() {\n    return {\n      loginAccount: \"\",\n      password: \"\",\n      email: \"\",\n      code: \"\"\n    };\n  },\n  methods: {\n    toLogin() {\n      this.$router.push(\"/login\");\n    },\n    getEmailReg() {\n      if (!this.email) {\n        this.$message({\n          message: '请输入邮箱',\n          type: 'warning'\n        });\n        return;\n      }\n      var regex = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/; // 邮箱正则表达式\n      if (!regex.test(this.email)) {\n        this.$message({\n          message: '请输入正确的邮箱格式',\n          type: 'warning'\n        });\n        return;\n      }\n      getEmailReg({\n        email: this.email\n      }).then(res => {\n        if (res.code == 100) {\n          this.$message({\n            message: '验证码已发送',\n            type: 'success'\n          });\n        } else {\n          this.$message({\n            message: res.message,\n            type: 'warning'\n          });\n        }\n      });\n    },\n    forgetPassword() {\n      if (!this.loginAccount) {\n        this.$message({\n          message: '请输入登录账号',\n          type: 'warning'\n        });\n        return;\n      }\n      if (!this.password) {\n        this.$message({\n          message: '请输入密码',\n          type: 'warning'\n        });\n        return;\n      }\n      if (!this.code) {\n        this.$message({\n          message: '请输入用户名',\n          type: 'warning'\n        });\n        return;\n      }\n      if (!this.email) {\n        this.$message({\n          message: '请输入邮箱',\n          type: 'warning'\n        });\n        return;\n      }\n      var regex = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/; // 邮箱正则表达式\n      if (!regex.test(this.email)) {\n        this.$message({\n          message: '请输入正确的邮箱格式',\n          type: 'warning'\n        });\n        return;\n      }\n      var param = {\n        loginAccount: this.loginAccount,\n        password: this.password,\n        email: this.email,\n        code: this.code\n      };\n      forgetPassword(param).then(res => {\n        if (res.code == 1000) {\n          this.$message({\n            message: '密码修改成功',\n            type: 'success'\n          });\n          var that = this;\n          setTimeout(function () {\n            that.$router.push(\"/login\");\n          }, 500);\n        } else {\n          this.$message({\n            message: res.message,\n            type: 'warning'\n          });\n        }\n      });\n    }\n  },\n  created() {},\n  mounted() {}\n};","map":{"version":3,"names":["getEmailReg","forgetPassword","data","loginAccount","password","email","code","methods","toLogin","$router","push","$message","message","type","regex","test","then","res","param","that","setTimeout","created","mounted"],"sources":["src/views/forget/forget.vue"],"sourcesContent":["<template>\r\n  <div class=\"login\">\r\n    <div class=\"login1\">\r\n    </div>\r\n    <div class=\"login4\">\r\n        <div class=\"login5\">\r\n          <img src=\"../../assets/image/logo.png\" style=\"width: 50px;position: relative; top: 13px;right: 6px\">\r\n          <el-input prefix-icon=\"el-icon-user\" v-model=\"loginAccount\" placeholder=\"请输入登录账号\"></el-input>\r\n            <el-input prefix-icon=\"el-icon-star-off\" type=\"password\" v-model=\"password\" placeholder=\"请输入用户密码\"></el-input>\r\n            <el-input prefix-icon=\"el-icon-s-order\" v-model=\"email\" placeholder=\"请输入邮箱\"></el-input>\r\n            <el-input prefix-icon=\"el-icon-s-ticket\" v-model=\"code\" placeholder=\"请输入验证码\"></el-input>\r\n            <div class=\"login8\" @click=\"forgetPassword\">\r\n                提交\r\n            </div>\r\n            <!-- <div class=\"login8\" @click=\"getEmailReg\">\r\n                获取验证码\r\n            </div> -->\r\n        </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n  import {getEmailReg,forgetPassword} from '../../api/api'\r\n  export default {\r\n    data() {\r\n      return{\r\n        loginAccount: \"\",\r\n        password: \"\",\r\n        email: \"\",\r\n        code: \"\",\r\n      }\r\n    },\r\n    methods: {\r\n        toLogin() {\r\n            this.$router.push(\"/login\")\r\n        },\r\n        getEmailReg() {\r\n          if(!this.email) {\r\n              this.$message({\r\n                  message: '请输入邮箱',\r\n                  type: 'warning'\r\n              });\r\n              return;\r\n          }\r\n          var regex = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/; // 邮箱正则表达式\r\n          if (!regex.test(this.email)) {\r\n              this.$message({\r\n                  message: '请输入正确的邮箱格式',\r\n                  type: 'warning'\r\n              });\r\n              return;\r\n          }\r\n          getEmailReg({email: this.email}).then(res => {\r\n            if (res.code == 100) {\r\n              this.$message({\r\n                  message: '验证码已发送',\r\n                  type: 'success'\r\n              });\r\n            } else {\r\n              this.$message({\r\n                  message: res.message,\r\n                  type: 'warning'\r\n              });\r\n            }\r\n          })\r\n        },\r\n        forgetPassword() {\r\n          if(!this.loginAccount) {\r\n              this.$message({\r\n                  message: '请输入登录账号',\r\n                  type: 'warning'\r\n              });\r\n              return;\r\n          }\r\n          if(!this.password) {\r\n              this.$message({\r\n                  message: '请输入密码',\r\n                  type: 'warning'\r\n              });\r\n              return;\r\n          }\r\n          if(!this.code) {\r\n              this.$message({\r\n                  message: '请输入用户名',\r\n                  type: 'warning'\r\n              });\r\n              return;\r\n          }\r\n          if(!this.email) {\r\n              this.$message({\r\n                  message: '请输入邮箱',\r\n                  type: 'warning'\r\n              });\r\n              return;\r\n          }\r\n          var regex = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/; // 邮箱正则表达式\r\n          if (!regex.test(this.email)) {\r\n              this.$message({\r\n                  message: '请输入正确的邮箱格式',\r\n                  type: 'warning'\r\n              });\r\n              return;\r\n          }\r\n          var param = {\r\n            loginAccount: this.loginAccount,\r\n            password: this.password,\r\n            email: this.email,\r\n            code: this.code\r\n          }\r\n          forgetPassword(param).then(res => {\r\n            if (res.code == 1000) {\r\n              this.$message({\r\n                  message: '密码修改成功',\r\n                  type: 'success'\r\n              });\r\n              var that = this\r\n              setTimeout(function() {\r\n                  that.$router.push(\"/login\")\r\n              },500)\r\n            } else {\r\n              this.$message({\r\n                  message: res.message,\r\n                  type: 'warning'\r\n              });\r\n            }\r\n          })\r\n        }\r\n    },\r\n    created() {\r\n\r\n    },\r\n    mounted() {\r\n\r\n    }\r\n }\r\n</script>\r\n\r\n<style scoped>\r\n  @import url('../../assets/css/login.css');\r\n</style>\r\n"],"mappings":";AAuBA,SAAAA,WAAA,EAAAC,cAAA;AACA;EACAC,KAAA;IACA;MACAC,YAAA;MACAC,QAAA;MACAC,KAAA;MACAC,IAAA;IACA;EACA;EACAC,OAAA;IACAC,QAAA;MACA,KAAAC,OAAA,CAAAC,IAAA;IACA;IACAV,YAAA;MACA,UAAAK,KAAA;QACA,KAAAM,QAAA;UACAC,OAAA;UACAC,IAAA;QACA;QACA;MACA;MACA,IAAAC,KAAA;MACA,KAAAA,KAAA,CAAAC,IAAA,MAAAV,KAAA;QACA,KAAAM,QAAA;UACAC,OAAA;UACAC,IAAA;QACA;QACA;MACA;MACAb,WAAA;QAAAK,KAAA,OAAAA;MAAA,GAAAW,IAAA,CAAAC,GAAA;QACA,IAAAA,GAAA,CAAAX,IAAA;UACA,KAAAK,QAAA;YACAC,OAAA;YACAC,IAAA;UACA;QACA;UACA,KAAAF,QAAA;YACAC,OAAA,EAAAK,GAAA,CAAAL,OAAA;YACAC,IAAA;UACA;QACA;MACA;IACA;IACAZ,eAAA;MACA,UAAAE,YAAA;QACA,KAAAQ,QAAA;UACAC,OAAA;UACAC,IAAA;QACA;QACA;MACA;MACA,UAAAT,QAAA;QACA,KAAAO,QAAA;UACAC,OAAA;UACAC,IAAA;QACA;QACA;MACA;MACA,UAAAP,IAAA;QACA,KAAAK,QAAA;UACAC,OAAA;UACAC,IAAA;QACA;QACA;MACA;MACA,UAAAR,KAAA;QACA,KAAAM,QAAA;UACAC,OAAA;UACAC,IAAA;QACA;QACA;MACA;MACA,IAAAC,KAAA;MACA,KAAAA,KAAA,CAAAC,IAAA,MAAAV,KAAA;QACA,KAAAM,QAAA;UACAC,OAAA;UACAC,IAAA;QACA;QACA;MACA;MACA,IAAAK,KAAA;QACAf,YAAA,OAAAA,YAAA;QACAC,QAAA,OAAAA,QAAA;QACAC,KAAA,OAAAA,KAAA;QACAC,IAAA,OAAAA;MACA;MACAL,cAAA,CAAAiB,KAAA,EAAAF,IAAA,CAAAC,GAAA;QACA,IAAAA,GAAA,CAAAX,IAAA;UACA,KAAAK,QAAA;YACAC,OAAA;YACAC,IAAA;UACA;UACA,IAAAM,IAAA;UACAC,UAAA;YACAD,IAAA,CAAAV,OAAA,CAAAC,IAAA;UACA;QACA;UACA,KAAAC,QAAA;YACAC,OAAA,EAAAK,GAAA,CAAAL,OAAA;YACAC,IAAA;UACA;QACA;MACA;IACA;EACA;EACAQ,QAAA,GAEA;EACAC,QAAA,GAEA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}