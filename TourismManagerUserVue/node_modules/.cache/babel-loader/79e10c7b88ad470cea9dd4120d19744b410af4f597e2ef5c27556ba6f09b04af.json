{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { saveUser } from '../../api/api';\nexport default {\n  data() {\n    return {\n      loginAccount: \"\",\n      password: \"\",\n      userName: \"\",\n      type: \"1\",\n      email: \"\",\n      tel: \"\"\n    };\n  },\n  methods: {\n    toLogin() {\n      this.$router.push(\"/login\");\n    },\n    saveUser() {\n      if (!this.loginAccount) {\n        this.$message({\n          message: '请输入登录账号',\n          type: 'warning'\n        });\n        return;\n      }\n      if (!this.password) {\n        this.$message({\n          message: '请输入密码',\n          type: 'warning'\n        });\n        return;\n      }\n      if (!this.userName) {\n        this.$message({\n          message: '请输入用户名',\n          type: 'warning'\n        });\n        return;\n      }\n      if (!this.email) {\n        this.$message({\n          message: '请输入邮箱',\n          type: 'warning'\n        });\n        return;\n      }\n      var regex = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/; // 邮箱正则表达式\n      if (!regex.test(this.email)) {\n        this.$message({\n          message: '请输入正确的邮箱格式',\n          type: 'warning'\n        });\n        return;\n      }\n      if (!this.tel) {\n        this.$message({\n          message: '请输入联系方式',\n          type: 'warning'\n        });\n        return;\n      }\n      var param = {\n        loginAccount: this.loginAccount,\n        password: this.password,\n        userName: this.userName,\n        email: this.email,\n        tel: this.tel,\n        userType: 1\n      };\n      saveUser(param).then(res => {\n        if (res.code == 1000) {\n          if (this.type == 2) {\n            this.$message({\n              message: '正在审核，审核完成后会将结果发送到您的邮箱，请注意查收',\n              type: 'success'\n            });\n          } else {\n            this.$message({\n              message: '注册成功',\n              type: 'success'\n            });\n          }\n          var that = this;\n          setTimeout(function () {\n            that.$router.push(\"/login\");\n          }, 500);\n        } else {\n          this.$message({\n            message: res.message,\n            type: 'warning'\n          });\n        }\n      });\n    }\n  },\n  created() {},\n  mounted() {}\n};","map":{"version":3,"names":["saveUser","data","loginAccount","password","userName","type","email","tel","methods","toLogin","$router","push","$message","message","regex","test","param","userType","then","res","code","that","setTimeout","created","mounted"],"sources":["src/views/register/register.vue"],"sourcesContent":["<template>\r\n    <div class=\"login\">\r\n        <div class=\"login1\">\r\n        </div>\r\n        <div class=\"login4\">\r\n            <div class=\"login5\">\r\n                <i class=\"iconfont icon-r-love\" style=\"font-size: 56px;\"></i><br>\r\n                <el-input prefix-icon=\"el-icon-user\" v-model=\"loginAccount\" placeholder=\"请输入登录账号\"></el-input>\r\n                <el-input prefix-icon=\"el-icon-star-off\" type=\"password\" v-model=\"password\"\r\n                    placeholder=\"请输入用户密码\"></el-input>\r\n                <el-input prefix-icon=\"el-icon-s-platform\" v-model=\"userName\" placeholder=\"请输入用户名\"></el-input>\r\n                <el-input prefix-icon=\"el-icon-s-order\" v-model=\"email\" placeholder=\"请输入邮箱\"></el-input>\r\n                <el-input prefix-icon=\"el-icon-s-ticket\" v-model=\"tel\" placeholder=\"请输入联系电话\"></el-input>\r\n                <button class=\"login9\" @click=\"saveUser\">\r\n                    注册\r\n                </button>\r\n                <button class=\"login8\" @click=\"toLogin\">\r\n                    登录\r\n                </button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport { saveUser } from '../../api/api'\r\nexport default {\r\n    data() {\r\n        return {\r\n            loginAccount: \"\",\r\n            password: \"\",\r\n            userName: \"\",\r\n            type: \"1\",\r\n            email: \"\",\r\n            tel: \"\",\r\n        }\r\n    },\r\n    methods: {\r\n        toLogin() {\r\n            this.$router.push(\"/login\")\r\n        },\r\n        saveUser() {\r\n            if (!this.loginAccount) {\r\n                this.$message({\r\n                    message: '请输入登录账号',\r\n                    type: 'warning'\r\n                });\r\n                return;\r\n            }\r\n            if (!this.password) {\r\n                this.$message({\r\n                    message: '请输入密码',\r\n                    type: 'warning'\r\n                });\r\n                return;\r\n            }\r\n            if (!this.userName) {\r\n                this.$message({\r\n                    message: '请输入用户名',\r\n                    type: 'warning'\r\n                });\r\n                return;\r\n            }\r\n            if (!this.email) {\r\n                this.$message({\r\n                    message: '请输入邮箱',\r\n                    type: 'warning'\r\n                });\r\n                return;\r\n            }\r\n            var regex = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/; // 邮箱正则表达式\r\n            if (!regex.test(this.email)) {\r\n                this.$message({\r\n                    message: '请输入正确的邮箱格式',\r\n                    type: 'warning'\r\n                });\r\n                return;\r\n            }\r\n            if (!this.tel) {\r\n                this.$message({\r\n                    message: '请输入联系方式',\r\n                    type: 'warning'\r\n                });\r\n                return;\r\n            }\r\n            var param = {\r\n                loginAccount: this.loginAccount,\r\n                password: this.password,\r\n                userName: this.userName,\r\n                email: this.email,\r\n                tel: this.tel,\r\n                userType: 1,\r\n            }\r\n            saveUser(param).then(res => {\r\n                if (res.code == 1000) {\r\n                    if (this.type == 2) {\r\n                        this.$message({\r\n                            message: '正在审核，审核完成后会将结果发送到您的邮箱，请注意查收',\r\n                            type: 'success'\r\n                        });\r\n                    } else {\r\n                        this.$message({\r\n                            message: '注册成功',\r\n                            type: 'success'\r\n                        });\r\n                    }\r\n                    var that = this\r\n                    setTimeout(function () {\r\n                        that.$router.push(\"/login\")\r\n                    }, 500)\r\n                } else {\r\n                    this.$message({\r\n                        message: res.message,\r\n                        type: 'warning'\r\n                    });\r\n                }\r\n            })\r\n        }\r\n    },\r\n    created() {\r\n\r\n    },\r\n    mounted() {\r\n\r\n    }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n@import url('../../assets/css/login.css');\r\n</style>\r\n"],"mappings":";AAyBA,SAAAA,QAAA;AACA;EACAC,KAAA;IACA;MACAC,YAAA;MACAC,QAAA;MACAC,QAAA;MACAC,IAAA;MACAC,KAAA;MACAC,GAAA;IACA;EACA;EACAC,OAAA;IACAC,QAAA;MACA,KAAAC,OAAA,CAAAC,IAAA;IACA;IACAX,SAAA;MACA,UAAAE,YAAA;QACA,KAAAU,QAAA;UACAC,OAAA;UACAR,IAAA;QACA;QACA;MACA;MACA,UAAAF,QAAA;QACA,KAAAS,QAAA;UACAC,OAAA;UACAR,IAAA;QACA;QACA;MACA;MACA,UAAAD,QAAA;QACA,KAAAQ,QAAA;UACAC,OAAA;UACAR,IAAA;QACA;QACA;MACA;MACA,UAAAC,KAAA;QACA,KAAAM,QAAA;UACAC,OAAA;UACAR,IAAA;QACA;QACA;MACA;MACA,IAAAS,KAAA;MACA,KAAAA,KAAA,CAAAC,IAAA,MAAAT,KAAA;QACA,KAAAM,QAAA;UACAC,OAAA;UACAR,IAAA;QACA;QACA;MACA;MACA,UAAAE,GAAA;QACA,KAAAK,QAAA;UACAC,OAAA;UACAR,IAAA;QACA;QACA;MACA;MACA,IAAAW,KAAA;QACAd,YAAA,OAAAA,YAAA;QACAC,QAAA,OAAAA,QAAA;QACAC,QAAA,OAAAA,QAAA;QACAE,KAAA,OAAAA,KAAA;QACAC,GAAA,OAAAA,GAAA;QACAU,QAAA;MACA;MACAjB,QAAA,CAAAgB,KAAA,EAAAE,IAAA,CAAAC,GAAA;QACA,IAAAA,GAAA,CAAAC,IAAA;UACA,SAAAf,IAAA;YACA,KAAAO,QAAA;cACAC,OAAA;cACAR,IAAA;YACA;UACA;YACA,KAAAO,QAAA;cACAC,OAAA;cACAR,IAAA;YACA;UACA;UACA,IAAAgB,IAAA;UACAC,UAAA;YACAD,IAAA,CAAAX,OAAA,CAAAC,IAAA;UACA;QACA;UACA,KAAAC,QAAA;YACAC,OAAA,EAAAM,GAAA,CAAAN,OAAA;YACAR,IAAA;UACA;QACA;MACA;IACA;EACA;EACAkB,QAAA,GAEA;EACAC,QAAA,GAEA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}